import { StyleSheet, SafeAreaView, Text, View, TextInput, TouchableOpacity, Image } from 'react-native';
import React, { useState } from 'react';
import { SvgXml } from 'react-native-svg';

const search = `
    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M10.7881 10.0475C11.6158 9.04553 12.1385 7.76039 12.1385 6.34454C12.1385 3.16435 9.54647 0.572266 6.36627 0.572266C3.18607 0.572266 0.593994 3.16435 0.593994 6.34454C0.593994 9.52474 3.18607 12.1168 6.36627 12.1168C7.76033 12.1168 9.06726 11.6158 10.0692 10.7663L14.5564 15.2535C14.6653 15.3624 14.796 15.4059 14.9267 15.4059C15.0574 15.4059 15.1881 15.3624 15.297 15.2535C15.493 15.0574 15.493 14.7089 15.297 14.5129L10.7881 10.0475ZM6.34449 11.0713C3.73063 11.0713 1.61776 8.95841 1.61776 6.34454C1.61776 3.73068 3.73063 1.61781 6.34449 1.61781C8.95835 1.61781 11.0712 3.73068 11.0712 6.34454C11.0712 8.95841 8.95835 11.0713 6.34449 11.0713Z" fill="black" fill-opacity="0.7"/>
    </svg>
`;

const filter = `
    <svg width="28" height="27" viewBox="0 0 28 27" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M0.990625 4.73351H1.12242C1.325 5.52945 1.78701 6.23521 2.43545 6.73928C3.08389 7.24336 3.8818 7.51701 4.70312 7.51701C5.52445 7.51701 6.32236 7.24336 6.9708 6.73928C7.61924 6.23521 8.08125 5.52945 8.28383 4.73351H26.9781C27.2243 4.73351 27.4604 4.63572 27.6344 4.46166C27.8085 4.28761 27.9062 4.05154 27.9062 3.80538C27.9062 3.55923 27.8085 3.32316 27.6344 3.1491C27.4604 2.97504 27.2243 2.87726 26.9781 2.87726H8.28383C8.08125 2.08131 7.61924 1.37555 6.9708 0.871478C6.32236 0.367404 5.52445 0.09375 4.70312 0.09375C3.8818 0.09375 3.08389 0.367404 2.43545 0.871478C1.78701 1.37555 1.325 2.08131 1.12242 2.87726H0.990625C0.744471 2.87726 0.508399 2.97504 0.334341 3.1491C0.160284 3.32316 0.0625 3.55923 0.0625 3.80538C0.0625 4.05154 0.160284 4.28761 0.334341 4.46166C0.508399 4.63572 0.744471 4.73351 0.990625 4.73351ZM4.70312 1.94913C5.07026 1.94913 5.42914 2.058 5.7344 2.26197C6.03966 2.46593 6.27758 2.75584 6.41808 3.09503C6.55857 3.43421 6.59533 3.80744 6.52371 4.16752C6.45208 4.5276 6.27529 4.85835 6.01569 5.11795C5.75609 5.37755 5.42534 5.55434 5.06526 5.62596C4.70518 5.69759 4.33195 5.66083 3.99277 5.52033C3.65358 5.37984 3.36368 5.14192 3.15971 4.83666C2.95574 4.5314 2.84688 4.17251 2.84688 3.80538C2.84688 3.31307 3.04244 2.84093 3.39056 2.49281C3.73867 2.1447 4.21082 1.94913 4.70312 1.94913ZM26.9781 12.1585H26.8463C26.6437 11.3626 26.1817 10.6568 25.5333 10.1527C24.8849 9.64865 24.0869 9.375 23.2656 9.375C22.4443 9.375 21.6464 9.64865 20.998 10.1527C20.3495 10.6568 19.8875 11.3626 19.6849 12.1585H0.990625C0.744471 12.1585 0.508399 12.2563 0.334341 12.4303C0.160284 12.6044 0.0625 12.8405 0.0625 13.0866C0.0625 13.3328 0.160284 13.5689 0.334341 13.7429C0.508399 13.917 0.744471 14.0148 0.990625 14.0148H19.6849C19.8875 14.8107 20.3495 15.5165 20.998 16.0205C21.6464 16.5246 22.4443 16.7983 23.2656 16.7983C24.0869 16.7983 24.8849 16.5246 25.5333 16.0205C26.1817 15.5165 26.6437 14.8107 26.8463 14.0148H26.9781C27.2243 14.0148 27.4604 13.917 27.6344 13.7429C27.8085 13.5689 27.9062 13.3328 27.9062 13.0866C27.9062 12.8405 27.8085 12.6044 27.6344 12.4303C27.4604 12.2563 27.2243 12.1585 26.9781 12.1585ZM23.2656 14.9429C22.8985 14.9429 22.5396 14.834 22.2343 14.63C21.9291 14.4261 21.6912 14.1362 21.5507 13.797C21.4102 13.4578 21.3734 13.0846 21.445 12.7245C21.5167 12.3644 21.6935 12.0337 21.9531 11.7741C22.2127 11.5145 22.5434 11.3377 22.9035 11.266C23.2636 11.1944 23.6368 11.2312 23.976 11.3717C24.3152 11.5122 24.6051 11.7501 24.809 12.0554C25.013 12.3606 25.1219 12.7195 25.1219 13.0866C25.1219 13.5789 24.9263 14.0511 24.5782 14.3992C24.2301 14.7473 23.7579 14.9429 23.2656 14.9429ZM26.9781 21.4398H17.5651C17.3625 20.6438 16.9005 19.9381 16.252 19.434C15.6036 18.9299 14.8057 18.6562 13.9844 18.6562C13.1631 18.6562 12.3651 18.9299 11.7167 19.434C11.0683 19.9381 10.6063 20.6438 10.4037 21.4398H0.990625C0.744471 21.4398 0.508399 21.5375 0.334341 21.7116C0.160284 21.8857 0.0625 22.1217 0.0625 22.3679C0.0625 22.614 0.160284 22.8501 0.334341 23.0242C0.508399 23.1982 0.744471 23.296 0.990625 23.296H10.4037C10.6063 24.092 11.0683 24.7977 11.7167 25.3018C12.3651 25.8059 13.1631 26.0795 13.9844 26.0795C14.8057 26.0795 15.6036 25.8059 16.252 25.3018C16.9005 24.7977 17.3625 24.092 17.5651 23.296H26.9781C27.2243 23.296 27.4604 23.1982 27.6344 23.0242C27.8085 22.8501 27.9062 22.614 27.9062 22.3679C27.9062 22.1217 27.8085 21.8857 27.6344 21.7116C27.4604 21.5375 27.2243 21.4398 26.9781 21.4398ZM13.9844 24.2241C13.6172 24.2241 13.2584 24.1153 12.9531 23.9113C12.6478 23.7073 12.4099 23.4174 12.2694 23.0782C12.1289 22.7391 12.0922 22.3658 12.1638 22.0057C12.2354 21.6457 12.4122 21.3149 12.6718 21.0553C12.9314 20.7957 13.2622 20.6189 13.6222 20.5473C13.9823 20.4757 14.3555 20.5124 14.6947 20.6529C15.0339 20.7934 15.3238 21.0313 15.5278 21.3366C15.7318 21.6419 15.8406 22.0007 15.8406 22.3679C15.8406 22.8602 15.6451 23.3323 15.2969 23.6804C14.9488 24.0286 14.4767 24.2241 13.9844 24.2241Z" fill="#FB8C00"/>
    </svg>
`;

const notif = `
    <svg width="26" height="27" viewBox="0 0 26 27" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M24.8032 19.5844C24.5407 19.1156 24.222 18.6469 23.8657 18.15C23.018 17.0914 22.4304 15.8488 22.1501 14.5219L21.7564 8.99062C21.522 4.70625 19.0189 0.375 14.0407 0.375H11.9595C6.98136 0.375 4.45949 4.70625 4.20636 8.98125L3.81261 14.5219C3.53352 15.8605 2.94609 17.1156 2.09699 18.1875C1.77824 18.675 1.45949 19.125 1.24386 19.5469C1.01245 19.8575 0.872294 20.2265 0.839169 20.6124C0.806044 20.9983 0.881263 21.3858 1.05636 21.7312C1.26065 22.0941 1.56161 22.3931 1.92575 22.595C2.28989 22.7969 2.70291 22.8939 3.11886 22.875H10.3564C10.2022 23.2998 10.1526 23.7555 10.2119 24.2035C10.2712 24.6516 10.4376 25.0787 10.697 25.4488C10.9564 25.8188 11.3011 26.121 11.702 26.3296C12.1029 26.5381 12.5482 26.647 13.0001 26.647C13.452 26.647 13.8973 26.5381 14.2982 26.3296C14.6991 26.121 15.0439 25.8188 15.3033 25.4488C15.5626 25.0787 15.729 24.6516 15.7883 24.2035C15.8476 23.7555 15.798 23.2998 15.6439 22.875H22.8814C23.3011 22.8903 23.7168 22.7877 24.0813 22.5789C24.4458 22.3702 24.7446 22.0635 24.9439 21.6937C25.1191 21.3639 25.1988 20.9917 25.1739 20.619C25.1491 20.2464 25.0207 19.888 24.8032 19.5844ZM13.9376 23.8125C13.9376 23.9979 13.8826 24.1792 13.7796 24.3333C13.6766 24.4875 13.5302 24.6077 13.3589 24.6786C13.1876 24.7496 12.9991 24.7682 12.8172 24.732C12.6354 24.6958 12.4683 24.6065 12.3372 24.4754C12.2061 24.3443 12.1168 24.1772 12.0806 23.9954C12.0445 23.8135 12.063 23.625 12.134 23.4537C12.2049 23.2824 12.3251 23.136 12.4793 23.033C12.6334 22.93 12.8147 22.875 13.0001 22.875C13.2488 22.875 13.4872 22.9738 13.663 23.1496C13.8388 23.3254 13.9376 23.5639 13.9376 23.8125ZM23.3126 20.8406C23.3126 20.9156 23.1532 21 22.9189 21H3.11886C2.88449 21 2.76261 20.9156 2.72511 20.8406C2.68761 20.7656 2.72511 20.6625 2.81886 20.5125C3.07199 20.0812 3.36261 19.6312 3.66261 19.1812C4.60011 17.8312 5.53761 16.2937 5.67824 14.6531L6.08136 9.1125C6.27824 5.94375 7.93761 2.25 11.9595 2.25H14.0407C18.0626 2.25 19.722 5.94375 19.9189 9.12187L20.322 14.6531C20.4345 16.3125 21.4376 17.8312 22.3751 19.1812C22.6751 19.6312 22.9657 20.1187 23.2657 20.5969C23.2956 20.629 23.3158 20.6689 23.3241 20.712C23.3324 20.7551 23.3284 20.7997 23.3126 20.8406Z" fill="#FB8C00"/>
    </svg>
`;



export default function Tab() {

    const [activeTab, setActiveTab] = useState('new'); // New tab is the default

    const renderTabContent = () => {
        if (activeTab === 'new') {
            return (
                <Text>New Tab Content</Text>
            );
        }
        if (activeTab === 'responds') {
            return (
                <Text>Responds Tab Content</Text>
            );
        }
    };

    return (
        <SafeAreaView style={styles.safeArea}>
            <View style={styles.container}>
                <View style={styles.search}>
                    <View style={styles.searchbar}>
                        <SvgXml xml={search} width={20} height={20} 
                            style={styles.search_img}
                        />
                        <TextInput
                            style={styles.search_input}
                            placeholder='Search...'
                        />
                    </View>
                    <View style={styles.filter_not}>
                        <SvgXml xml={filter} width={26} height={26} 
                            style={styles.search_img}
                        />
                        <SvgXml xml={notif} width={26} height={26} 
                            style={styles.search_img}
                        />
                    </View>
                </View>
                <View style={styles.header}>
                    <TouchableOpacity
                        style={[styles.tab, activeTab === 'new' && styles.activeTab]}
                        onPress={() => setActiveTab('new')}
                    >
                        <Text style={[styles.tabText]}>New</Text>
                    </TouchableOpacity>
                    <TouchableOpacity
                        style={[styles.tab, activeTab === 'responds' && styles.activeTab]}
                        onPress={() => setActiveTab('responds')}
                    >
                        <Text style={[styles.tabText]}>Responds</Text>
                    </TouchableOpacity>
                </View>

                <View style={styles.content}>
                    {renderTabContent()}
                </View>
            </View>
        </SafeAreaView>
    )
}

const styles = StyleSheet.create({
    safeArea: {
        flex: 1,
        backgroundColor: '#fff',
    },
    container: {
        flex: 1,
        // justifyContent: 'center',
        paddingHorizontal: 15,
        // margin: 6,
        marginTop: 15,
    },
    search: {
        display: "flex",
        flexDirection: "row",
    },
    searchbar: {
        flexDirection: 'row',
        alignItems: 'center',
        borderWidth: 1,
        borderColor: '#DDD',
        borderRadius: 5,
        paddingHorizontal: 12,
        width: "80%",
        backgroundColor: '#FFF',
        height: 40,
    },
    search_input: {
        fontSize: 14,
        flex: 1,
        height: 40,
    },
    search_img: {
        margin: 8,
        marginLeft: -1,
    },
    filter_not: {
        display: "flex",
        flexDirection: "row",
        alignItems: "center",
        justifyContent: "space-between",
        width: 70,
        marginLeft: 10,
    },
    header: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        height: 45,
        marginTop: 20,
        borderRadius: 10,
        backgroundColor: "#00ACC1",
    },
    tab: {
        paddingVertical: 6,
        paddingBottom: 30,
        borderRadius: 8,
        margin: 6,
        height: 33,
        width: 168,
    },
    activeTab: {
        backgroundColor: "#FB8C00",
    },
    tabText: {
        fontSize: 16,
        fontWeight: 'bold',
        color: "white",
        textAlign: "center",
        width: 168,
        height: 33,
    },
    content: {
        padding: 20,
    },
});